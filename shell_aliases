# NE PAS EDITER
# Source: https://github.com/SamK/dotfiles/

# TOC:
#
# 1. correction aliases
# 2. daily aliases and commands
# 4. color support
# 5. final

# 1. correction aliases
alias gerp='grep'
alias iv='vi'
alias sudp='sudo'

#
# 2. daily aliases and commands
#

# ls
alias ll='ls -lhF'
alias tree='LC_COLLATE=C tree --dirsfirst -F'
alias l='ls --color=auto -hlF --group-directories-first'
alias la='LC_COLLATE="C" l -A'

# cl = cd + ls
function cl() { cd "$@" && /bin/ls -lh --color ;}

alias tmux='TERM=xterm-256color /usr/bin/tmux'
alias ack='ack-grep'

# find
findxsvn () {
    local searchdir=$1
    shift
    find $searchdir -not -iwholename ".svn" $@
}

function dudir() {
    du -hs $( ls -A $1 ) | sort -h
}

# When using sudo, use alias expansion (otherwise sudo ignores your aliases)
alias sudo='sudo '

# cd + ls = cl
function cl() { cd "$@" && /bin/ls -lh --color  ;}

# Remove comments from config file
alias cleanconf="sed -e 's/#.*//;/^\s*$/d' "$@""

# desktop application "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias xalert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# nice history (zsh only)
alias hist='fc -liD 1 | less -R +G'

# subversion
svn-diff() { svn diff "${@}" | colordiff | less -R; }

# configure git selon un fichier local
gitconfig-local () {
    cdir=$HOME
    prefix='.gitconfig.local'
    current=$(readlink $cdir/$prefix)
    if [ -z "$1" ]; then
        for filename in $( /bin/ls -1 $cdir/${prefix}.* ); do
            f=$( basename $filename )
            f=$( echo "$f" | sed "s/$prefix//" | sed 's/^\.//' )
            echo -n "$f"
            if [[ "$filename" == "$current" ]]; then
                echo -n '*'
            fi
            echo ''
        done
    else
        if [ ! -f "${cdir}/${prefix}.${1}" ] ; then
            echo "Notice: The file "${cdir}/${prefix}.${1}" does not exist." >&2
        fi
        ln -f  -s ${cdir}/${prefix}.${1} ${cdir}/.gitconfig.local
    fi
}

# typo correction
alias qgit='git'
alias ggit='git'
alias gti='git'
# initalias a git repo with an empty commit
alias git-init='git init && git commit --allow-empty -m "First empty commit"'
alias gap="git add --patch"
alias gl="git lgl"
# clean a string to make it compatible with a branch name
alias git-name-branch="sed -r -e 's/[^A-Za-z0-9/\-]/ /g' -e 's/\s+/_/g' -e 's/^[^A-Za-z0-9]+//g' -e 's/[^a-zA-Z0-9]+$//g'"
                                 # remplacer les caracteres mal aim√©s par des espaces
                                                            # les espaces deviennent des underscore
                                                                           # Nettoyer le debut de la chaine
                                                                                                     # nettoyer la fin de la chaine

# yaml validation
# requires a file as argument
function yaml-check-rby { ruby -e "require 'yaml'; YAML.load_file('$1')"; }
# reads stdin
alias yaml-check='python -c "import yaml,sys;yaml.safe_load(sys.stdin)"'
alias yaml-pprint='python -c "import yaml,pprint,sys;pprint.pprint(yaml.safe_load(sys.stdin))"'

# network 

alias stracenet="strace -f -e trace=network -s 10000"
alias resolveip="resolveip -s"

#
# 4. color support
#

if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
    alias cz='(ccze -m ansi | less -MnFRX)'
fi

colorz () {
    perl -CADS -lwe '
    my $block = shift || (chr(0x2588) x 3);
    for (["", 0], ["1;", 0], ["", 8], ["1;", 8]) {
        my ($bold, $offset) = @$_;
        my @range = map $offset + $_, 0..7;
        printf "%s %-6s ", $bold ? "bold" : "norm", "$range[0]-$range[-1]";
        print map("\e[${bold}38;5;${_}m$block", @range), "\e[0m"
    }
    ' "$@"
}

function lesscolor () {
    if [ -x /usr/bin/dircolors ]; then
        ccze -A < "$1" | less -R;
    else
        echo "Colors do not seem to be supported on this terminal." >&2
        return 127
    fi
}

# `man` use colors
man() {
    env \
    LESS_TERMCAP_mb=$'\e[01;31m' \
    LESS_TERMCAP_md=$'\e[01;31m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[01;44;33m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[01;32m' \
    man "$@"
}

# 5. Final
if [ -f ~/.shell_aliases.local ]; then
    source ~/.shell_aliases.local
fi

#
# END
#



