#!/bin/bash


RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

function warning(){
    echo -e "${RED}${*}${NC}"
}

function message_ok(){
    echo -e "${GREEN}${*}${NC}"
}

function branch_name(){
    # determine the branch name (http://stackoverflow.com/a/1593487)
    local branch
    branch="$(git symbolic-ref HEAD 2>/dev/null)" || branch_name=$(git rev-parse --short HEAD)
    branch=${branch##refs/heads/}
    echo $branch
}

function is_wip(){

    if [ ! -d .git ]; then
        return
    fi

    local messages=()
    local ref
    ref=$(branch_name)

    if [ "$ref" != "master" ] && [ "$ref" != "develop" ] ; then
        messages+=("Current branch is \"$ref\"")
    fi

    uncommited_count=$(git status --porcelain | wc -l)
    if [ "$uncommited_count" != "0" ]; then
        messages+=("$uncommited_count uncommited files")
    fi

    unmerged_count=$(git branch --no-merged | wc -l)
    if [ "$unmerged_count" != "0" ]; then
        messages+=("$unmerged_count unmerged branches")
    fi

    messages_count=${#messages[@]}
    if [ "$messages_count" != "0" ]; then
        echo "./$repo:"
        for i in "${messages[@]}"; do
            warning "    $i"
        done
    else
        echo -e "./${repo}: ${GREEN}OK${NC}"
    fi

}

if [[ $# -eq 0 ]] ; then
        folder=.
    else
        folder="$1"
fi

function is_git_repo() {
    folder=$1
    pushd $folder > /dev/null
    #>&2 echo "DEBUG: is_git_repo(): current location of is_git_repo: $PWD"
    git rev-parse --is-inside-work-tree 2>/dev/null
    return $?
    R=$?
    popd > /dev/null
    return $R
}

function find_git_repos() {
    search_folder=$1
    for git_folder in $(find $search_folder -type d -name .git); do
        repo=$(dirname $git_folder)
        if $(is_git_repo "$repo"); then
            echo $repo
        else
            >&2 warning "WARNING: $repo is not a git repository"
        fi
    done
}

for repo in $(find_git_repos $folder); do
    pushd "$repo" > /dev/null
    is_wip
    popd > /dev/null
done

exit 0
