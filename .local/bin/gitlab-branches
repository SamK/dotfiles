#!/usr/bin/env python3

import os
import sys
import requests
#import pprint

# imported vars
gitlab_token = os.environ['GITLAB_TOKEN']
gitlab_url = os.environ['GITLAB_URL']

# app vars
gitlab_api_url = "{}/api/v4".format(gitlab_url)
headers = {'PRIVATE-TOKEN': gitlab_token}
projects_payload = {'starred': True}
projects_url = '{}/projects?starred=true'.format(gitlab_api_url)
ignored_branches = ['master']


def get_projects():
    r = requests.get(projects_url, params=projects_payload, headers=headers)
    r.raise_for_status()
    try:
        return r.json()
    except Exception:
        print(r.text)
        sys.exit(1)

def get_branches(project_url):
    url = "{}/repository/branches".format(project_url)
    r = requests.get(url, headers=headers)
    r.raise_for_status()
    try:
        return r.json()
    except Exception:
        print(r.text)
        sys.exit(1)

#def get_my_branches():

def whoami():
    url = "{}/user".format(gitlab_api_url)
    r = requests.get(url, headers=headers)
    r.raise_for_status()
    try:
        return r.json()
    except Exception:
        print(r.text)
        sys.exit(1)


# arg parse
if len(sys.argv) > 1:
    find = "name"
    branch_filter = sys.argv[1]
else:
    find = "author"
    author = whoami()



for project in get_projects():
    project_url=project['_links']['self']

    if find == "name":
        for branch in get_branches(project_url):
            if branch_filter in branch['name']:
                print("{}:{} {}".format(project['name'], branch['name'], branch['web_url']))
                #pprint.pprint(branch)
    elif find == "author":
        for branch in get_branches(project_url):
            if (
                    author['email'] == branch['commit']['author_email'] or
                    author['name'] == branch['commit']['committer_name'] or
                    author['name'] == branch['commit']['author_name']
                ) and \
                branch['name'] not in ignored_branches:
                #pprint.pprint(branch)
                print("{}:{} {}".format(project['name'], branch['name'], branch['web_url']))
    else:
        print("?")
        sys.exit(127)
